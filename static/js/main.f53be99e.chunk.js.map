{"version":3,"sources":["components/ResultComponent.js","components/FormComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ResultDisplay","props","Modal","show","onHide","hide","style","maxHeight","Container","fluid","textAlign","Body","info","map","element","Fragment","replace","replaceAll","ButtonTypes","Col","xs","span","offset","sm","xl","className","Button","variant","block","name","onClick","height","Form","Check","type","onChange","checked","state","display","HorrorForm","Comedy","Thriller","Drama","Crime","from","to","exact","database","showModal","passInfo","genres","submitButton","bind","buttonTypes","fetch","then","res","json","data","setState","error","event","this","target","concat","filter","item","result","includes","console","log","Row","Card","body","color","Group","Label","column","Control","as","rows","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f53be99e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Modal, Container} from 'react-bootstrap';\r\n\r\nfunction ResultDisplay(props){\r\n        return(\r\n            <Modal show={props.show} onHide={props.hide} style={{maxHeight: \"100%\"}}>\r\n                <Container fluid>\r\n                    <h1 style={{textAlign:\"center\"}}>Movies</h1>\r\n                    <Modal.Body>\r\n                        {props.info.map(element =>{\r\n                            return <React.Fragment key={element['Title']}>\r\n                                <h3>{element['Title']}</h3>\r\n                                <h5>{element['Genres'].replace('Horror|','').replaceAll('|', ',')}</h5>\r\n                                <h5>{element['Release Date']} , {element['Release Country']}</h5>\r\n                                <h5>{element['Movie Rating']}</h5>\r\n                                <h5>{element['Movie Run Time']}</h5>\r\n                                <h5>{element['Plot']}</h5>\r\n                                <h5>{element['Cast'].replaceAll('|', ', ')}</h5>\r\n                            </React.Fragment>\r\n                        })}\r\n                    </Modal.Body>\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\nexport default ResultDisplay;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport ResultDisplay from './ResultComponent';\r\n\r\nfunction ButtonTypes(props) {\r\n    return(\r\n        <Col xs={{span:8, offset:2}} sm={{span:6, offset:0}} xl={{span:4, offset:0}} className=\"mt-2\">\r\n            <Button variant=\"primary\" block name={props.name} onClick={props.onClick} style={{height:\"50px\"}}>\r\n                        <Form.Check type=\"checkbox\" name={props.name} onChange={props.onClick} checked={props.state} style={{display:\"inline\"}}/> {props.name}\r\n            </Button>\r\n        </Col>\r\n    );\r\n}\r\n\r\nclass HorrorForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Comedy: false,\r\n            Thriller: false,\r\n            Drama: false,\r\n            Crime: false,\r\n            from: 0,\r\n            to: 0,\r\n            exact: 0,\r\n            info: \"\",\r\n            database: [],\r\n            showModal: false,\r\n            passInfo: [],\r\n            genres: []\r\n        };\r\n        this.submitButton = this.submitButton.bind(this);\r\n        this.buttonTypes = this.buttonTypes.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://my-json-server.typicode.com/antran1245/horrorAPI/movies\")\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            this.setState({\r\n                database: data\r\n            });\r\n        },\r\n        error => {\r\n            this.setState({\r\n                error\r\n            })\r\n        });\r\n    }\r\n\r\n    buttonTypes(event) {\r\n        this.setState({\r\n            [event.target.name]: (this.state[event.target.name] === false ? true : false)\r\n        });\r\n        if(this.state[event.target.name] === false) {\r\n            this.setState({\r\n                genres: this.state.genres.concat(event.target.name)\r\n            });\r\n        } else if(this.state[event.target.name] === true) {\r\n            this.setState({\r\n                genres: this.state.genres.filter(item => item !== event.target.name)\r\n            });\r\n        }\r\n    }\r\n\r\n    submitButton() {\r\n        var result = []\r\n        if(this.state.Comedy === true) {\r\n            result = this.state.database.filter(item => item['Genres'].includes('Comedy'));\r\n        } else {\r\n            result = result.concat(this.state.database);\r\n        }\r\n        if(this.state.Thriller === true) {\r\n            result = result.filter(item => item['Genres'].includes('Thriller'));\r\n        }\r\n        if(this.state.Drama === true) {\r\n            result = result.filter(item => item['Genres'].includes('Drama'));\r\n        }\r\n        if(this.state.Crime === true) {\r\n            result = result.filter(item => item['Genres'].includes('Crime'));\r\n        }\r\n        this.setState({\r\n            showModal: true,\r\n            passInfo: result\r\n        });\r\n        console.log(result);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                <Col xs={{span:12}} sm={{span:8, offset:2}}>\r\n                    <Card body className=\"form_container\" style={{color:\"white\"}}>\r\n                        <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Choose types:</Form.Label>\r\n                            <Row>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Comedy} name={\"Comedy\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Thriller} name={\"Thriller\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Drama} name={\"Drama\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Crime} name={\"Crime\"}/>\r\n                            </Row>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Year</Form.Label>\r\n                            <Form.Row>\r\n                                <Form.Label column xs={{span: 3}} sm={{span:1}} className=\"mt-2 mt-sm-0\">From:</Form.Label>\r\n                                <Col xs={{span: 8}} sm={{span:2}}>\r\n                                    <Form.Control as=\"input\"/>\r\n                                </Col>\r\n                                <Form.Label column xs={{span: 3}} sm={{span:1, offset:1}} className=\"mt-2 mt-sm-0\">To:</Form.Label>\r\n                                <Col xs={{span: 8}} sm={{span:2}}>\r\n                                    <Form.Control as=\"input\"/>\r\n                                </Col>\r\n                                <Form.Label column xs={{span: 3}} sm={{span:1, offset:1}} className=\"mt-2 mt-sm-0\">Exact:</Form.Label>\r\n                                <Col xs={{span: 8}} sm={{span:2}}>\r\n                                    <Form.Control as=\"input\"/>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Additional Information</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3}/>\r\n                        </Form.Group>\r\n                        <Form.Row className=\"justify-content-center\">\r\n                            <Col xs={12} sm={{span:6}}>\r\n                                <Button block onClick={this.submitButton}>Submit</Button>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form>\r\n                    </Card>\r\n                    <ResultDisplay show={this.state.showModal} info={this.state.passInfo} hide={()=>this.setState({showModal: false})}/>\r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HorrorForm;","import HorrorForm from './components/FormComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HorrorForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}