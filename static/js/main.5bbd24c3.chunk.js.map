{"version":3,"sources":["components/FormComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonTypes","props","Col","xs","span","offset","sm","xl","className","Button","variant","block","name","onClick","style","height","Form","Check","type","onChange","checked","state","display","HorrorForm","Comedy","Crime","Found","Gore","Monster","Paranormal","Psychological","Slasher","Thriller","from","to","exact","info","buttonTypes","bind","event","this","setState","target","Container","Row","Card","body","color","Group","Label","column","Control","as","rows","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGA,SAASA,EAAYC,GACjB,OACI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAK,EAAGC,OAAO,GAAIC,GAAI,CAACF,KAAK,EAAGC,OAAO,GAAIE,GAAI,CAACH,KAAK,EAAGC,OAAO,GAAIG,UAAU,OAAvF,SACI,eAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,OAAK,EAACC,KAAMX,EAAMW,KAAMC,QAASZ,EAAMY,QAASC,MAAO,CAACC,OAAO,QAAzF,UACY,cAACC,EAAA,EAAKC,MAAN,CAAYC,KAAK,WAAWN,KAAMX,EAAMW,KAAMO,SAAUlB,EAAMY,QAASO,QAASnB,EAAMoB,MAAOP,MAAO,CAACQ,QAAQ,YADzH,IACuIrB,EAAMW,U,IA0F1IW,E,kDAnFX,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACDoB,MAAQ,CACTG,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,YAAY,EACZC,eAAe,EACfC,SAAS,EACTC,UAAU,EACVC,KAAM,EACNC,GAAI,EACJC,MAAO,EACPC,KAAM,IAGV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAlBJ,E,wDAqBPC,GACRC,KAAKC,SAAL,eACKF,EAAMG,OAAO9B,MAA0C,IAAlC4B,KAAKnB,MAAMkB,EAAMG,OAAO9B,U,+BAKlD,OACI,cAAC+B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACA,cAAC1C,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAK,IAAKE,GAAI,CAACF,KAAK,EAAGC,OAAO,GAAxC,SACI,cAACwC,EAAA,EAAD,CAAMC,MAAI,EAACtC,UAAU,iBAAiBM,MAAO,CAACiC,MAAM,SAApD,SACI,eAAC/B,EAAA,EAAD,WACA,eAACA,EAAA,EAAKgC,MAAN,WACI,cAAChC,EAAA,EAAKiC,MAAN,4BACA,eAACL,EAAA,EAAD,WACI,cAAC5C,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMG,OAAQZ,KAAM,WACxE,cAACZ,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMI,MAAOb,KAAM,UACvE,cAACZ,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMK,MAAOd,KAAM,UACvE,cAACZ,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMM,KAAMf,KAAM,SACtE,cAACZ,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMO,QAAShB,KAAM,YACzE,cAACZ,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMQ,WAAYjB,KAAM,eAC5E,cAACZ,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMS,cAAelB,KAAM,kBAC/E,cAACZ,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMU,QAASnB,KAAM,YACzE,cAACZ,EAAD,CAAaa,QAAS2B,KAAKH,YAAahB,MAAOmB,KAAKnB,MAAMW,SAAUpB,KAAM,mBAGlF,eAACI,EAAA,EAAKgC,MAAN,WACI,cAAChC,EAAA,EAAKiC,MAAN,mBACA,eAACjC,EAAA,EAAK4B,IAAN,WACI,cAAC5B,EAAA,EAAKiC,MAAN,CAAYC,QAAM,EAAC/C,GAAI,CAACC,KAAM,GAAIE,GAAI,CAACF,KAAK,GAAII,UAAU,eAA1D,mBACA,cAACN,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,GAAIE,GAAI,CAACF,KAAK,GAA9B,SACI,cAACY,EAAA,EAAKmC,QAAN,CAAcC,GAAG,YAErB,cAACpC,EAAA,EAAKiC,MAAN,CAAYC,QAAM,EAAC/C,GAAI,CAACC,KAAM,GAAIE,GAAI,CAACF,KAAK,EAAGC,OAAO,GAAIG,UAAU,eAApE,iBACA,cAACN,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,GAAIE,GAAI,CAACF,KAAK,GAA9B,SACI,cAACY,EAAA,EAAKmC,QAAN,CAAcC,GAAG,YAErB,cAACpC,EAAA,EAAKiC,MAAN,CAAYC,QAAM,EAAC/C,GAAI,CAACC,KAAM,GAAIE,GAAI,CAACF,KAAK,EAAGC,OAAO,GAAIG,UAAU,eAApE,oBACA,cAACN,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,GAAIE,GAAI,CAACF,KAAK,GAA9B,SACI,cAACY,EAAA,EAAKmC,QAAN,CAAcC,GAAG,kBAI7B,eAACpC,EAAA,EAAKgC,MAAN,WACI,cAAChC,EAAA,EAAKiC,MAAN,qCACA,cAACjC,EAAA,EAAKmC,QAAN,CAAcC,GAAG,WAAWC,KAAM,OAEtC,cAACrC,EAAA,EAAK4B,IAAN,CAAUpC,UAAU,yBAApB,SACI,cAACN,EAAA,EAAD,CAAKC,GAAI,GAAIG,GAAI,CAACF,KAAK,GAAvB,SACI,cAACK,EAAA,EAAD,CAAQE,OAAK,EAAb,uC,GAxEP2C,a,MCFVC,MARf,WACE,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,EAAD,OCMSgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5bbd24c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap';\r\n\r\nfunction ButtonTypes(props) {\r\n    return(\r\n        <Col xs={{span:8, offset:2}} sm={{span:6, offset:0}} xl={{span:4, offset:0}} className=\"mt-2\">\r\n            <Button variant=\"primary\" block name={props.name} onClick={props.onClick} style={{height:\"50px\"}}>\r\n                        <Form.Check type=\"checkbox\" name={props.name} onChange={props.onClick} checked={props.state} style={{display:\"inline\"}}/> {props.name}\r\n            </Button>\r\n        </Col>\r\n    );\r\n}\r\n\r\nclass HorrorForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Comedy: false,\r\n            Crime: false,\r\n            Found: false,\r\n            Gore: false,\r\n            Monster: false,\r\n            Paranormal: false,\r\n            Psychological: false,\r\n            Slasher: false,\r\n            Thriller: false,\r\n            from: 0,\r\n            to: 0,\r\n            exact: 0,\r\n            info: \"\"\r\n        };\r\n        \r\n        this.buttonTypes = this.buttonTypes.bind(this);\r\n    }\r\n\r\n    buttonTypes(event) {\r\n        this.setState({\r\n            [event.target.name]: (this.state[event.target.name] === false ? true : false)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                <Col xs={{span:12}} sm={{span:8, offset:2}}>\r\n                    <Card body className=\"form_container\" style={{color:\"white\"}}>\r\n                        <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Choose types:</Form.Label>\r\n                            <Row>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Comedy} name={\"Comedy\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Crime} name={\"Crime\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Found} name={\"Found\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Gore} name={\"Gore\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Monster} name={\"Monster\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Paranormal} name={\"Paranormal\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Psychological} name={\"Psychological\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Slasher} name={\"Slasher\"}/>\r\n                                <ButtonTypes onClick={this.buttonTypes} state={this.state.Thriller} name={\"Thriller\"}/>\r\n                            </Row>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Year</Form.Label>\r\n                            <Form.Row>\r\n                                <Form.Label column xs={{span: 3}} sm={{span:1}} className=\"mt-2 mt-sm-0\">From:</Form.Label>\r\n                                <Col xs={{span: 8}} sm={{span:2}}>\r\n                                    <Form.Control as=\"input\"/>\r\n                                </Col>\r\n                                <Form.Label column xs={{span: 3}} sm={{span:1, offset:1}} className=\"mt-2 mt-sm-0\">To:</Form.Label>\r\n                                <Col xs={{span: 8}} sm={{span:2}}>\r\n                                    <Form.Control as=\"input\"/>\r\n                                </Col>\r\n                                <Form.Label column xs={{span: 3}} sm={{span:1, offset:1}} className=\"mt-2 mt-sm-0\">Exact:</Form.Label>\r\n                                <Col xs={{span: 8}} sm={{span:2}}>\r\n                                    <Form.Control as=\"input\"/>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Additional Information</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3}/>\r\n                        </Form.Group>\r\n                        <Form.Row className=\"justify-content-center\">\r\n                            <Col xs={12} sm={{span:6}}>\r\n                                <Button block>Submit</Button>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HorrorForm;","import HorrorForm from './components/FormComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HorrorForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}